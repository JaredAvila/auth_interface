{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\thesa\\\\OneDrive\\\\Documents\\\\Dev\\\\NodeJS\\\\auth_interface\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\thesa\\\\OneDrive\\\\Documents\\\\Dev\\\\NodeJS\\\\auth_interface\\\\client\\\\src\\\\containers\\\\Auth\\\\Register\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport Input from \"../../../UI/Input/Input\";\nimport { NavLink } from \"react-router-dom\";\nimport { checkValidation } from \"../../../helpers/validation\";\nimport * as styles from \"./Register.module.css\";\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Email\",\n            autoComplete: \"username\"\n          },\n          value: \"\",\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            isEmail: true\n          }\n        },\n        password: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"password\",\n            placeholder: \"Password\",\n            autoComplete: \"new-password\"\n          },\n          value: \"\",\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        },\n        password2: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            autoComplete: \"new-password\"\n          },\n          value: \"\",\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        }\n      },\n      noMatch: false\n    };\n\n    this.onChangedHandler = (e, type) => {\n      const updatedControls = _objectSpread({}, this.state.controls, {\n        [type]: _objectSpread({}, this.state.controls[type], {\n          value: e.target.value,\n          touched: true,\n          valid: checkValidation(e.target.value, this.state.controls[type].validation)\n        })\n      });\n\n      this.setState({\n        controls: updatedControls,\n        noMatch: false\n      });\n    };\n\n    this.onSubmitHandler = e => {\n      e.preventDefault();\n\n      if (this.state.controls[\"password\"].value !== this.state.controls[\"password2\"].value) {\n        this.setState({\n          noMatch: true\n        });\n        return;\n      }\n\n      console.log(`Username: ${this.state.controls[\"email\"].value} \\n Password: ${this.state.controls[\"password\"].value}`); //Submit to be authenticated\n\n      this.props.history.push(\"/wallet\");\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    let form = formElementsArray.map(formElement => {\n      return React.createElement(Input, {\n        key: formElement.id,\n        inputType: formElement.config.elementType,\n        config: formElement.config.elementConfig,\n        value: formElement.config.value,\n        invalid: !formElement.config.valid,\n        shouldValidate: formElement.config.validation,\n        touched: formElement.config.touched,\n        changed: e => this.onChangedHandler(e, formElement.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: styles.Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Create an account\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, form, React.createElement(\"input\", {\n      className: styles.Btn,\n      type: \"submit\",\n      value: \"Sign In\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), this.state.noMatch ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Passwords do not match\") : null), React.createElement(\"p\", {\n      className: styles.Accnt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Already have an account?\"), React.createElement(NavLink, {\n      className: styles.Link,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"SIGN IN\")));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/thesa/OneDrive/Documents/Dev/NodeJS/auth_interface/client/src/containers/Auth/Register/Register.js"],"names":["React","Component","Input","NavLink","checkValidation","styles","Register","state","controls","email","elementType","elementConfig","type","placeholder","autoComplete","value","valid","touched","validation","required","isEmail","password","minLength","password2","noMatch","onChangedHandler","e","updatedControls","target","setState","onSubmitHandler","preventDefault","console","log","props","history","push","render","formElementsArray","key","id","config","form","map","formElement","Btn","Accnt","Link"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Input from \"../../../UI/Input/Input\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { checkValidation } from \"../../../helpers/validation\";\r\n\r\nimport * as styles from \"./Register.module.css\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Email\",\r\n          autoComplete: \"username\"\r\n        },\r\n        value: \"\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        }\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\",\r\n          autoComplete: \"new-password\"\r\n        },\r\n        value: \"\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      },\r\n      password2: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Confirm Password\",\r\n          autoComplete: \"new-password\"\r\n        },\r\n        value: \"\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    },\r\n    noMatch: false\r\n  };\r\n\r\n  onChangedHandler = (e, type) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [type]: {\r\n        ...this.state.controls[type],\r\n        value: e.target.value,\r\n        touched: true,\r\n        valid: checkValidation(\r\n          e.target.value,\r\n          this.state.controls[type].validation\r\n        )\r\n      }\r\n    };\r\n    this.setState({ controls: updatedControls, noMatch: false });\r\n  };\r\n\r\n  onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    if (\r\n      this.state.controls[\"password\"].value !==\r\n      this.state.controls[\"password2\"].value\r\n    ) {\r\n      this.setState({ noMatch: true });\r\n      return;\r\n    }\r\n    console.log(\r\n      `Username: ${this.state.controls[\"email\"].value} \\n Password: ${this.state.controls[\"password\"].value}`\r\n    );\r\n    //Submit to be authenticated\r\n    this.props.history.push(\"/wallet\");\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      });\r\n    }\r\n    let form = formElementsArray.map(formElement => {\r\n      return (\r\n        <Input\r\n          key={formElement.id}\r\n          inputType={formElement.config.elementType}\r\n          config={formElement.config.elementConfig}\r\n          value={formElement.config.value}\r\n          invalid={!formElement.config.valid}\r\n          shouldValidate={formElement.config.validation}\r\n          touched={formElement.config.touched}\r\n          changed={e => this.onChangedHandler(e, formElement.id)}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className={styles.Register}>\r\n        <div>\r\n          <h4>Create an account</h4>\r\n          <form onSubmit={this.onSubmitHandler}>\r\n            {form}\r\n            <input className={styles.Btn} type=\"submit\" value=\"Sign In\" />\r\n            {this.state.noMatch ? <p>Passwords do not match</p> : null}\r\n          </form>\r\n          <p className={styles.Accnt}>Already have an account?</p>\r\n          <NavLink className={styles.Link} to={\"/\"}>\r\n            SIGN IN\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}