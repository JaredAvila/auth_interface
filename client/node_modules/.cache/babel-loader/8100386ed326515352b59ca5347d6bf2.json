{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\thesa\\\\OneDrive\\\\Documents\\\\Dev\\\\NodeJS\\\\auth_interface\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\thesa\\\\OneDrive\\\\Documents\\\\Dev\\\\NodeJS\\\\auth_interface\\\\client\\\\src\\\\containers\\\\Auth\\\\Login\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Input from \"../../../UI/Input/Input\";\nimport { checkValidation } from \"../../../helpers/validation\";\nimport { connect } from \"react-redux\";\nimport * as styles from \"./Login.module.css\";\nimport * as actions from \"../../../store/actions/\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Email\",\n            autoComplete: \"username\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"password\",\n            placeholder: \"Password\",\n            autoComplete: \"current-password\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      }\n    };\n\n    this.onChangedHandler = (e, type) => {\n      const updatedControls = _objectSpread({}, this.state.controls, {\n        [type]: _objectSpread({}, this.state.controls[type], {\n          value: e.target.value,\n          valid: checkValidation(e.target.value, this.state.controls[type].validation),\n          touched: true\n        })\n      });\n\n      this.setState({\n        controls: updatedControls\n      });\n    };\n\n    this.onSubmitHandler = e => {\n      e.preventDefault(); //Submit to be authenticated\n\n      this.props.onLogin(this.state.controls[\"email\"].value, this.state.controls[\"password\"].value);\n      this.setState({\n        username: \"\",\n        password: \"\"\n      });\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    let form = formElementsArray.map(formElement => {\n      return React.createElement(Input, {\n        key: formElement.id,\n        inputType: formElement.config.elementType,\n        config: formElement.config.elementConfig,\n        value: formElement.config.value,\n        invalid: !formElement.config.valid,\n        shouldValidate: formElement.config.validation,\n        touched: formElement.config.touched,\n        changed: e => this.onChangedHandler(e, formElement.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: styles.Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.RegBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Sign In\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, form, React.createElement(\"input\", {\n      className: styles.Btn,\n      type: \"submit\",\n      value: \"Log In\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: styles.Accnt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Don't have an account?\"), React.createElement(NavLink, {\n      className: styles.Link,\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Create one now\")));\n  }\n\n}\n\nconst mapSateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    isAuth: state.auth.isAuth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogin: (email, password) => dispatch(actions.login(email, password))\n  };\n};\n\nexport default connect()(Login);","map":{"version":3,"sources":["C:/Users/thesa/OneDrive/Documents/Dev/NodeJS/auth_interface/client/src/containers/Auth/Login/Login.js"],"names":["React","Component","NavLink","Input","checkValidation","connect","styles","actions","Login","state","controls","email","elementType","elementConfig","type","placeholder","autoComplete","value","validation","required","isEmail","valid","touched","password","minLength","onChangedHandler","e","updatedControls","target","setState","onSubmitHandler","preventDefault","props","onLogin","username","render","formElementsArray","key","push","id","config","form","map","formElement","RegBox","Btn","Accnt","Link","mapSateToProps","loading","auth","isAuth","mapDispatchToProps","dispatch","login"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Input from \"../../../UI/Input/Input\";\r\nimport { checkValidation } from \"../../../helpers/validation\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as styles from \"./Login.module.css\";\r\nimport * as actions from \"../../../store/actions/\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    controls: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Email\",\r\n          autoComplete: \"username\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\",\r\n          autoComplete: \"current-password\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      }\r\n    }\r\n  };\r\n\r\n  onChangedHandler = (e, type) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [type]: {\r\n        ...this.state.controls[type],\r\n        value: e.target.value,\r\n        valid: checkValidation(\r\n          e.target.value,\r\n          this.state.controls[type].validation\r\n        ),\r\n        touched: true\r\n      }\r\n    };\r\n    this.setState({ controls: updatedControls });\r\n  };\r\n\r\n  onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    //Submit to be authenticated\r\n    this.props.onLogin(\r\n      this.state.controls[\"email\"].value,\r\n      this.state.controls[\"password\"].value\r\n    );\r\n    this.setState({ username: \"\", password: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      });\r\n    }\r\n    let form = formElementsArray.map(formElement => {\r\n      return (\r\n        <Input\r\n          key={formElement.id}\r\n          inputType={formElement.config.elementType}\r\n          config={formElement.config.elementConfig}\r\n          value={formElement.config.value}\r\n          invalid={!formElement.config.valid}\r\n          shouldValidate={formElement.config.validation}\r\n          touched={formElement.config.touched}\r\n          changed={e => this.onChangedHandler(e, formElement.id)}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className={styles.Login}>\r\n        <div className={styles.RegBox}>\r\n          <h4>Sign In</h4>\r\n          <form onSubmit={this.onSubmitHandler}>\r\n            {form}\r\n            <input className={styles.Btn} type=\"submit\" value=\"Log In\" />\r\n          </form>\r\n          <p className={styles.Accnt}>Don't have an account?</p>\r\n          <NavLink className={styles.Link} to={\"/register\"}>\r\n            Create one now\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapSateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    isAuth: state.auth.isAuth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogin: (email, password) => dispatch(actions.login(email, password))\r\n  };\r\n};\r\n\r\nexport default connect()(Login);\r\n"]},"metadata":{},"sourceType":"module"}