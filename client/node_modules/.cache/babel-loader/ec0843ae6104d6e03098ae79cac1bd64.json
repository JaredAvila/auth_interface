{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\thesa\\\\OneDrive\\\\Documents\\\\Dev\\\\NodeJS\\\\auth_interface\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\thesa\\\\OneDrive\\\\Documents\\\\Dev\\\\NodeJS\\\\auth_interface\\\\client\\\\src\\\\containers\\\\Auth\\\\Register\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Input from \"../../../UI/Input/Input\";\nimport { NavLink } from \"react-router-dom\";\nimport { checkValidation } from \"../../../helpers/validation\";\nimport { connect } from 'react-redux';\nimport * as styles from \"./Register.module.css\";\nimport * as actions from \"../../../store/actions/\";\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        name: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Name\"\n          },\n          value: \"\",\n          valid: false,\n          touched: false,\n          validation: {\n            required: true\n          }\n        },\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Email\",\n            autoComplete: \"username\"\n          },\n          value: \"\",\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            isEmail: true\n          }\n        },\n        password: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"password\",\n            placeholder: \"Password\",\n            autoComplete: \"new-password\"\n          },\n          value: \"\",\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        },\n        password2: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            autoComplete: \"new-password\"\n          },\n          value: \"\",\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        }\n      },\n      noMatch: false\n    };\n\n    this.onChangedHandler = (e, type) => {\n      const updatedControls = _objectSpread({}, this.state.controls, {\n        [type]: _objectSpread({}, this.state.controls[type], {\n          value: e.target.value,\n          touched: true,\n          valid: checkValidation(e.target.value, this.state.controls[type].validation)\n        })\n      });\n\n      this.setState({\n        controls: updatedControls,\n        noMatch: false\n      });\n    };\n\n    this.onSubmitHandler = async e => {\n      e.preventDefault();\n\n      if (this.state.controls[\"password\"].value !== this.state.controls[\"password2\"].value) {\n        this.setState({\n          noMatch: true\n        });\n        return;\n      } //Submit to be authenticated\n\n\n      console.log(\"SUCCESS\");\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    let form = formElementsArray.map(formElement => {\n      return React.createElement(Input, {\n        key: formElement.id,\n        inputType: formElement.config.elementType,\n        config: formElement.config.elementConfig,\n        value: formElement.config.value,\n        invalid: !formElement.config.valid,\n        shouldValidate: formElement.config.validation,\n        touched: formElement.config.touched,\n        changed: e => this.onChangedHandler(e, formElement.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      });\n    });\n    return React.createElement(\"div\", {\n      className: styles.Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Create an account\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, form, React.createElement(\"input\", {\n      className: styles.Btn,\n      type: \"submit\",\n      value: \"Sign In\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), this.state.noMatch ? React.createElement(\"p\", {\n      className: styles.ErrorMsg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Passwords do not match\") : null), React.createElement(\"p\", {\n      className: styles.Accnt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Already have an account?\"), React.createElement(NavLink, {\n      className: styles.Link,\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"SIGN IN\")));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/thesa/OneDrive/Documents/Dev/NodeJS/auth_interface/client/src/containers/Auth/Register/Register.js"],"names":["React","Component","axios","Input","NavLink","checkValidation","connect","styles","actions","Register","state","controls","name","elementType","elementConfig","type","placeholder","value","valid","touched","validation","required","email","autoComplete","isEmail","password","minLength","password2","noMatch","onChangedHandler","e","updatedControls","target","setState","onSubmitHandler","preventDefault","console","log","render","formElementsArray","key","push","id","config","form","map","formElement","Btn","ErrorMsg","Accnt","Link"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Input from \"../../../UI/Input/Input\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { checkValidation } from \"../../../helpers/validation\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as styles from \"./Register.module.css\";\r\nimport * as actions from \"../../../store/actions/\";\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    controls: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Name\"\r\n        },\r\n        value: \"\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true\r\n        }\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Email\",\r\n          autoComplete: \"username\"\r\n        },\r\n        value: \"\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        }\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Password\",\r\n          autoComplete: \"new-password\"\r\n        },\r\n        value: \"\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      },\r\n      password2: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"password\",\r\n          placeholder: \"Confirm Password\",\r\n          autoComplete: \"new-password\"\r\n        },\r\n        value: \"\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    },\r\n    noMatch: false\r\n  };\r\n\r\n  onChangedHandler = (e, type) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [type]: {\r\n        ...this.state.controls[type],\r\n        value: e.target.value,\r\n        touched: true,\r\n        valid: checkValidation(\r\n          e.target.value,\r\n          this.state.controls[type].validation\r\n        )\r\n      }\r\n    };\r\n    this.setState({ controls: updatedControls, noMatch: false });\r\n  };\r\n\r\n  onSubmitHandler = async e => {\r\n    e.preventDefault();\r\n    if (\r\n      this.state.controls[\"password\"].value !==\r\n      this.state.controls[\"password2\"].value\r\n    ) {\r\n      this.setState({ noMatch: true });\r\n      return;\r\n    }\r\n    //Submit to be authenticated\r\n    console.log(\"SUCCESS\");\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      });\r\n    }\r\n    let form = formElementsArray.map(formElement => {\r\n      return (\r\n        <Input\r\n          key={formElement.id}\r\n          inputType={formElement.config.elementType}\r\n          config={formElement.config.elementConfig}\r\n          value={formElement.config.value}\r\n          invalid={!formElement.config.valid}\r\n          shouldValidate={formElement.config.validation}\r\n          touched={formElement.config.touched}\r\n          changed={e => this.onChangedHandler(e, formElement.id)}\r\n        />\r\n      );\r\n    });\r\n    return (\r\n      <div className={styles.Register}>\r\n        <div>\r\n          <h4>Create an account</h4>\r\n          <form onSubmit={this.onSubmitHandler}>\r\n            {form}\r\n            <input className={styles.Btn} type=\"submit\" value=\"Sign In\" />\r\n            {this.state.noMatch ? (\r\n              <p className={styles.ErrorMsg}>Passwords do not match</p>\r\n            ) : null}\r\n          </form>\r\n          <p className={styles.Accnt}>Already have an account?</p>\r\n          <NavLink className={styles.Link} to={\"/login\"}>\r\n            SIGN IN\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}